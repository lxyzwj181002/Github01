<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
<!--spring配置文件,创建dao,service,工具类对象-->
    <!--声明数据源-->
    <!--连接数据库,通过配置文件-->
<!--声明配置文件的位置-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>
<!--声明数据源-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--下面给对象赋值，包括url，username，password-->
        <property name="username" value="${jdbc.username}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--连接池的最大对象数目-->
        <property name="maxActive" value="20"/>
    </bean>
<!--SqlSessionFactoryBean可以创建sqlSessionFactory对象，需要mybatis主配置文件-->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
<!-- 需要mybatis主配置文件位置-->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>
    <!--声明mybatis扫描器，创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.org.dao"/>
    </bean>
    <!--组件扫描器，是@service注解所在的包名，通过这样，就能把通过注解创建的对象加载完成-->
    <context:component-scan base-package="com.org.service"/>
    <!--事物配置：注解配置，aspectj配置-->
</beans>